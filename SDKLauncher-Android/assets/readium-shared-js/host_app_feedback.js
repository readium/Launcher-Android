//  LauncherAndroid
//
//  Created by Boris Schneiderman.
//  Copyright (c) 2012-2013 The Readium Foundation.
//
//  The Readium SDK is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

//This is demo file that does nothing
//Host application has to override this file and provide it's own logic for handling ReadiumSDK events
//See LauncherOSX and LauncherIOS for examples
ReadiumSDK.HostAppFeedback = function() {

    var initNavigatorEpubReadingSystem = function() {

        // Adjust to taste (application/vendor -level metadata):
        window.navigator.epubReadingSystem.name = "Readium SDKLauncher-Android";
        window.navigator.epubReadingSystem.version = "1.0.0";
        
        // Readium "internal" version:
        ReadiumSDK.READIUM_version = "1.0.0";

        // Do not edit the following lines! (low-level metadata)
        // The templated values ("ReadiumSDK.READIUM_"-prefixed values) are auto-generated by the build script,
        // see the "epubReadingSystem.js" file.

        window.navigator.epubReadingSystem.readium = {};
        window.navigator.epubReadingSystem.readium.buildInfo = {};

        window.navigator.epubReadingSystem.readium.buildInfo.dateTime = ReadiumSDK.READIUM_dateTimeString;
        //new Date(timestamp).toString();
        
        window.navigator.epubReadingSystem.readium.buildInfo.version = ReadiumSDK.READIUM_version;

        window.navigator.epubReadingSystem.readium.buildInfo.gitRepositories = [];

        var repo1 = {};
        repo1.name = "SDKLauncher-Android";
        repo1.sha = ReadiumSDK.READIUM_Android_sha;
        repo1.tag = ReadiumSDK.READIUM_Android_tag;
        repo1.clean = ReadiumSDK.READIUM_Android_clean;
        repo1.url = "https://github.com/readium/" + repo1.name + "/tree/" + repo1.sha;
        window.navigator.epubReadingSystem.readium.buildInfo.gitRepositories.push(repo1);

        var repo2 = {};
        repo2.name = "readium-sdk";
        repo2.sha = ReadiumSDK.READIUM_SDK_sha;
        repo2.tag = ReadiumSDK.READIUM_SDK_tag;
        repo2.clean = ReadiumSDK.READIUM_SDK_clean;
        repo2.url = "https://github.com/readium/" + repo2.name + "/tree/" + repo2.sha;
        window.navigator.epubReadingSystem.readium.buildInfo.gitRepositories.push(repo2);

        var repo3 = {};
        repo3.name = "readium-shared-js";
        repo3.sha = ReadiumSDK.READIUM_SHARED_JS_sha;
        repo3.tag = ReadiumSDK.READIUM_SHARED_JS_tag;
        repo3.clean = ReadiumSDK.READIUM_SHARED_JS_clean;
        repo3.url = "https://github.com/readium/" + repo3.name + "/tree/" + repo3.sha;
        window.navigator.epubReadingSystem.readium.buildInfo.gitRepositories.push(repo3);

        // Debug check:
        //console.debug(JSON.stringify(window.navigator.epubReadingSystem, undefined, 2));
    };

    ReadiumSDK.on(ReadiumSDK.Events.READER_INITIALIZED, function(){

        initNavigatorEpubReadingSystem();
        
        ReadiumSDK.reader.on(ReadiumSDK.Events.PAGINATION_CHANGED, this.onPaginationChanged, this);
        ReadiumSDK.reader.on(ReadiumSDK.Events.SETTINGS_APPLIED, this.onSettingsApplied, this);
        ReadiumSDK.reader.on(ReadiumSDK.Events.CONTENT_DOCUMENT_LOADED, this.onContentLoaded, this);
        ReadiumSDK.reader.on(ReadiumSDK.Events.MEDIA_OVERLAY_STATUS_CHANGED, this.onMediaOverlayStatusChanged, this);
        ReadiumSDK.reader.on(ReadiumSDK.Events.MEDIA_OVERLAY_TTS_SPEAK, this.onMediaOverlayTTSSpeak, this);
        ReadiumSDK.reader.on(ReadiumSDK.Events.MEDIA_OVERLAY_TTS_STOP, this.onMediaOverlayTTSStop, this);

        window.LauncherUI.onReaderInitialized();

    }, this);

    this.onPaginationChanged = function(pageChangeData) {

        if (window.LauncherUI) {
            var staticPaginationInfo = pageChangeData.paginationInfo;
            staticPaginationInfo.canGoLeft = staticPaginationInfo.canGoLeft();
            staticPaginationInfo.canGoRight = staticPaginationInfo.canGoRight();
            staticPaginationInfo.canGoNext = staticPaginationInfo.canGoNext();
            staticPaginationInfo.canGoPrev = staticPaginationInfo.canGoPrev();
            window.LauncherUI.onPaginationChanged(JSON.stringify(staticPaginationInfo));

            if(window.LauncherUI.onIsMediaOverlayAvailable){
                window.LauncherUI.onIsMediaOverlayAvailable(ReadiumSDK.reader.isMediaOverlayAvailable());
            }
        }

    };

    this.onSettingsApplied = function() {

        if(window.LauncherUI) {
            window.LauncherUI.onSettingsApplied();
        }
    };

    this.onContentLoaded = function() {

        if(window.LauncherUI) {
            window.LauncherUI.onContentLoaded();
        }
    };


    this.onMediaOverlayStatusChanged = function(status) {

        if(window.LauncherUI && window.LauncherUI.onMediaOverlayStatusChanged) {
            window.LauncherUI.onMediaOverlayStatusChanged(JSON.stringify(status));
        }
    };

    this.onMediaOverlayTTSSpeak = function(tts) {

        if(window.LauncherUI && window.LauncherUI.onMediaOverlayTTSSpeak) {
            window.LauncherUI.onMediaOverlayTTSSpeak(JSON.stringify(tts));
        }
    };

    this.onMediaOverlayTTSStop = function() {

        if(window.LauncherUI && window.LauncherUI.onMediaOverlayTTSStop) {
            window.LauncherUI.onMediaOverlayTTSStop();
        }
    };
}();

